#!/bin/bash

#SBATCH --partition=illc
#SBATCH --account=illc
#SBATCH --job-name=corpora
#SBATCH --ntasks=1
#SBATCH --gpus=1
#SBATCH --mem=28000M
#SBATCH --time=20:00:00
#SBATCH --output=slurm_output_%A.out

echo setting up Miniconda...
source $HOME/miniconda3/etc/profile.d/conda.sh

echo activating virtual env...
conda activate $HOME/miniconda3/envs/basic310
echo "current conda environment: $CONDA_DEFAULT_ENV"

echo activating ssh connection...
eval "$(ssh-agent -s)"
ssh-add $HOME/.ssh/id_ed25519

echo parsing input arguments...
unset -v BRANCH

while getopts b:h flag
do
    case "${flag}" in
        b) BRANCH=${OPTARG};;
        ?|h) echo "Usage: $0 -b branch"; exit 1;;
    esac
done
echo "Branch: $BRANCH";

shift "$(( OPTIND - 1 ))"

if [ -z "$BRANCH" ]
then
    echo "Branch is mandatory. Usage: $0 -b branch"
    exit 1
fi

echo fetching and pulling latest changes from remote dir...
cd $HOME/Documents/thesis_code/reduce_grammar/
git fetch && git pull

echo running generating corpora...
versions=("normal" "pos")
topks=("0.2" "0.3" "0.4" "0.5" "0.6" "0.7" "0.8")
for topk in "${topks[@]}"; do
    for version in "${versions[@]}"; do
        echo "Running script for version $version"
        srun python generate_corpora.py --version="$version" \
                            --top_k="$topk" \
                            --output_dir=/scratch/$USER/results \
                            --data_dir=/scratch/$USER \
                            --corpus_file=/scratch/$USER/corpora/corpus_${topk}_${version}.pt \
    done
done

echo adding, committing, and pushing results to remote dir...
git add $HOME/Documents/thesis_code/reduce_grammar/
git commit -m "save results from run (automated commit from Lisa)."
git push

echo done.